{"version":3,"sources":["services/movieDb-api.js","components/MovieDetails.js","css/MovieDetails.module.css","pages/Cast.js","pages/Reviews.js","pages/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","key","fetchPopularMovies","get","then","response","data","fetchSearchMovies","title","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","MovieDetails","state","this","props","details","overview","imgUrl","avgVote","genres","year","type","onClick","onGoBack","className","styles","infoContainer","posterImg","src","alt","genresList","map","genre","name","to","Component","module","exports","Cast","actors","MoviesAPI","match","params","setState","cast","slice","character","profile_path","catch","error","actor","Reviews","reviews","results","author","content","length","review","AsyncMovieDetails","lazy","MovieDetailsPage","movieDetails","isLoading","handleGoBack","history","location","goBack","poster_path","vote_average","totalVotes","vote_count","release_date","substring","finally","fallback","path","component"],"mappings":"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","file":"static/js/movieDetails-page.a976bf75.chunk.js","sourcesContent":["import axios from 'axios';\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n// export const fetchArticles = (category = null) => {\r\n//   const url = category ? `/articles?category=${category}` : '/articles';\r\n//   return axios.get(url).then(response => response.data);\r\n// };\r\n// export const fetchArticleWithId = id => {\r\n//   return axios.get(`/articles/${id}`).then(response => response.data);\r\n// };\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst key = 'api_key=81654eed17fef2c0f309b4c799d69085';\r\n\r\nexport const fetchPopularMovies = () => {\r\n  return axios.get(`/trending/all/week?${key}`).then(response => response.data);\r\n};\r\n\r\nexport const fetchSearchMovies = title => {\r\n  return axios\r\n    .get(\r\n      `/search/movie?${key}&language=en-US&query=${title}&page=1&include_adult=false`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nexport const fetchMovieDetails = id => {\r\n  return axios\r\n    .get(`/movie/${id}?${key}&language=en-US`)\r\n    .then(response => response.data);\r\n};\r\n\r\nexport const fetchMovieCast = id => {\r\n  return axios\r\n    .get(`/movie/${id}/credits?${key}`)\r\n    .then(response => response.data);\r\n};\r\n\r\nexport const fetchMovieReviews = id => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?${key}&language=en-US&page=1`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../css/MovieDetails.module.css';\r\n\r\nexport default class MovieDetails extends Component {\r\n  state = {};\r\n\r\n  static propTypes = {\r\n    details: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      overview,\r\n      imgUrl,\r\n      avgVote,\r\n      genres,\r\n      year,\r\n    } = this.props.details;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.props.onGoBack}>\r\n          &#x2190; Back\r\n        </button>\r\n        <div className={styles.infoContainer}>\r\n          {imgUrl && (\r\n            <img\r\n              className={styles.posterImg}\r\n              src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${imgUrl}`}\r\n              alt={title}\r\n            />\r\n          )}\r\n          <div>\r\n            <h2>\r\n              {title} ({year})\r\n            </h2>\r\n            <p>Avarage rating: {avgVote}</p>\r\n            <h3>Overview</h3>\r\n            <p>{overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul className={styles.genresList}>\r\n              {genres &&\r\n                genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p>Additional information</p>\r\n          <Link to={`/movies/${id}/cast`}>\r\n            <p>Cast</p>\r\n          </Link>\r\n          <Link to={`/movies/${id}/reviews`}>\r\n            <p>Reviews</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"MovieDetails_infoContainer__oI1b3\",\"posterImg\":\"MovieDetails_posterImg__O7L15\",\"genresList\":\"MovieDetails_genresList__3GDp8\"};","import React, { Component } from 'react';\r\nimport * as MoviesAPI from '../services/movieDb-api';\r\n\r\nconst mapper = actors => {\r\n  return actors.map(({ id, name, character, profile_path: imgUrl }) => ({\r\n    id,\r\n    name,\r\n    character,\r\n    imgUrl,\r\n  }));\r\n};\r\n\r\nconst getIdFromProps = props => props.match.params.id;\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    actors: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    MoviesAPI.fetchMovieCast(getIdFromProps(this.props))\r\n      .then(data =>\r\n        this.setState({\r\n          actors: [...mapper(data.cast.slice(0, 5))],\r\n        }),\r\n      )\r\n\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n\r\n  render() {\r\n    const { actors } = this.state;\r\n    return (\r\n      <ul>\r\n        {actors.map(actor => (\r\n          <li key={actor.id}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w235_and_h235_face${actor.imgUrl}`}\r\n              alt={actor.name}\r\n            />\r\n            <p>{actor.name}</p>\r\n            <p>Character: {actor.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as MoviesAPI from '../services/movieDb-api';\r\n\r\nconst mapper = actors => {\r\n  return actors.map(({ author, content, id }) => ({\r\n    author,\r\n    content,\r\n    id,\r\n  }));\r\n};\r\n\r\nconst getIdFromProps = props => props.match.params.id;\r\n\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    MoviesAPI.fetchMovieReviews(getIdFromProps(this.props))\r\n      .then(data =>\r\n        this.setState({\r\n          reviews: [...mapper(data.results)],\r\n        }),\r\n      )\r\n\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return reviews.length > 0 ? (\r\n      <ul>\r\n        {reviews.map(review => (\r\n          <li key={review.id}>\r\n            <h3>{review.author}</h3>\r\n            <p>{review.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    ) : (\r\n      <p>There is no reviews for this movie</p>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, lazy, Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MovieDetails from '../components/MovieDetails';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport * as MoviesAPI from '../services/movieDb-api';\r\n\r\nconst getIdFromProps = props => props.match.params.id;\r\n\r\nconst AsyncMovieDetails = lazy(() =>\r\n  import(\r\n    '../components/MovieDetails' /* webpackChunkName: \"movieDetails-page\" */\r\n  ),\r\n);\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {\r\n    movieDetails: {},\r\n    error: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  handleGoBack = () => {\r\n    const { history, location } = this.props;\r\n    // this.props.history.location.pathname.includes('movies')\r\n    //   ? history.push('/movies')\r\n    //   : history.push('/');\r\n    history.goBack();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    MoviesAPI.fetchMovieDetails(getIdFromProps(this.props))\r\n      .then(data =>\r\n        this.setState({\r\n          movieDetails: {\r\n            id: data.id,\r\n            title: data.title,\r\n            overview: data.overview,\r\n            imgUrl: data.poster_path,\r\n            avgVote: data.vote_average,\r\n            totalVotes: data.vote_count,\r\n            genres: data.genres,\r\n            year: data.release_date.substring(0, 4),\r\n          },\r\n        }),\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(this.setState({ isLoading: false }));\r\n  }\r\n  render() {\r\n    const { movieDetails, isLoading } = this.state;\r\n    const { match } = this.props;\r\n    return (\r\n      <div>\r\n        {isLoading ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Suspense fallback={<h1>Loading...</h1>}>\r\n            <AsyncMovieDetails\r\n              onGoBack={this.handleGoBack}\r\n              details={movieDetails}\r\n            />\r\n            <Route path={`${match.path}/cast`} component={Cast} />\r\n            <Route path={`${match.path}/reviews`} component={Reviews} />\r\n          </Suspense>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}